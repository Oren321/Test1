local BlossomPrivate = loadstring(game:HttpGet("https://raw.githubusercontent.com/ProjectFred/Library/main/src"))()

--Window
local Main = BlossomPrivate:Window({
    Title = "Blossom Private",
})

--AutoFarm
local AutoFarmTab = Main:Tab({
    Name = "AutoFarm",
    Image = "rbxassetid://10709798174"
})

local isToggled = false

AutoFarmTab:Toggle({
    Name = "AutoRoll",
    Default = false,
    Callback = function(var)
        isToggled = var
        while isToggled do
            game:GetService("ReplicatedStorage").Network.Eggs_Roll:InvokeServer()
            task.wait()
        end
    end
})

--Event
local EventTab = Main:Tab({
    Name = "Event",
    Image = "rbxassetid://10709798174"
})

local isToggled = false

EventTab:Toggle({
    Name = "Auto Open Pot Of Gold At Max",
    Default = false,
    Callback = function(var)

        isToggled = var

        if isToggled then
            spawn(function()
                while isToggled do
                    local TycoonCmds = require(game:GetService("ReplicatedStorage").Library.Client.TycoonCmds)
                    local Clover = require(game:GetService("ReplicatedStorage").Library.Directory.Tycoons).Clover
                    local CloverEventCmds = require(game:GetService("ReplicatedStorage").Library.Client.CloverEventCmds)

                    local MINE = TycoonCmds.Get(Clover)

                    if MINE then
                        local currentPoints = CloverEventCmds.GetEggPoints(MINE)
                        local maxPoints = CloverEventCmds.GetMaxEggPoints(MINE)

                        if currentPoints >= maxPoints then
                            game:GetService("ReplicatedStorage"):WaitForChild("Network")
                                :WaitForChild("Clovers_HatchEgg"):InvokeServer()
                        end
                    end

                    task.wait()
                end
            end)
        else
            isToggled = false
        end
    end
})

local isToggled = false

EventTab:Toggle({
    Name = "Auto Collect Clovers",
    Default = false,
    Callback = function(var)

        isToggled = var

        if isToggled then
            task.spawn(function()
                local clovers = workspace.__THINGS.Clovers

                local function fireTouchInterest(part)
                    local playerChar = game.Players.LocalPlayer.Character
                    local primaryPart = playerChar and playerChar.PrimaryPart or part
                    firetouchinterest(part, primaryPart, 0)
                    firetouchinterest(part, primaryPart, 1)
                end

                while isToggled do
                    for _, model in pairs(clovers:GetChildren()) do
                        local part = model:FindFirstChild("Part")
                        if part then
                            fireTouchInterest(part)
                        end
                    end
                    task.wait()
                end
            end)
        else
            isToggled = false
        end
    end
})

local isToggled = false

EventTab:Toggle({
    Name = "Auto Collect Hoppers Loot",
    Default = false,
    Callback = function(var)

        isToggled = var

        if isToggled then
            task.spawn(function()
                while isToggled do
                    game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("Clovers_HopperClaim"):InvokeServer()
                    task.wait(5)
                end
            end)
        else
            isToggled = false
        end
    end
})

local isToggled = false
local patches = { "Patch_1", "Patch_2", "Patch_3", "Patch_4", "Patch_5", "Patch_6", "Patch_7", "Patch_8" }
local categories = { "", "_Farmer", "_Speed1", "_Speed2", "_Quality1", "_Quality2", "_Speed3", "_Quality3" }

EventTab:Toggle({
    Name = "Auto Purchase Patches",
    Default = false,
    Callback = function(var)
        isToggled = var

        if isToggled then
            task.spawn(function()
                while isToggled do
                    for _, patch in ipairs(patches) do
                        for _, category in ipairs(categories) do
                            local args = {
                                [1] = patch .. category,
                                [2] = "Clover"
                            }

                            game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("Tycoons: Purchase"):InvokeServer(unpack(args))
                            task.wait()
                        end
                    end
                end
            end)
        else
            isToggled = false
        end
    end
})

EventTab:Dropdown({
    Name = "Select Fishing Spot",
    Items = {"Kraken", "Shark", "Tuna", "Salmon"}, -- Example fishing spots
    Default = "Kraken",
    Multiselect = false,
    Callback = function(selectedSpot)
        print("Selected Fishing Spot:", selectedSpot)
    end
})
